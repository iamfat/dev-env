location = /lims {
    return 301 /lims/;
}

location ~ ^/lims/socket.iov2 {
    rewrite ^/lims/socket\.iov2(.*) /socket.io$1 break;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-NginX-Proxy true;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    set $equipment_ws_host 'lims2-reserv.dev:9899';
    proxy_pass http://$equipment_ws_host;
    proxy_redirect off;
}

location ~ ^/lims(?<path>/.*|)$ {
    alias /var/lib/lims2/public$path;
    index index.php;

    # since $path will be decoded, parse $raw_path from $request_uri
    if ($request_uri ~ ^/lims(?<raw_path>/.*?)(\?.*|)$ ) {
        set $raw_path $raw_path;
    }

    if ($raw_path ~ ^/\!.+\.(js|css|ppng|jpg|jpeg|gif|ico|bmpï½œwebp|svg|swf)$) {
        rewrite ^/lims/(.+)$ /lims/index.php/public?f=$1 last;
    }

    if (!-f $request_filename) {
        rewrite ^/lims/.+$ /lims/index.php$raw_path last;
    }

    location ~ \.php {
        access_log /dev/stdout main;
        fastcgi_split_path_info ^/lims/(.+?\.php)(/.*)?$;
        set $lims_host "lims2.dev:9000";
        fastcgi_pass $lims_host;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME /var/lib/lims2/public/$fastcgi_script_name;
        fastcgi_param SCRIPT_NAME /lims/$fastcgi_script_name;
        fastcgi_param URL_PREFIX /lims;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param SITE_ID $lims_site_id;
        fastcgi_param LAB_ID $lims_lab_id;
    }

    location ~* \.(eot|ttf|woff|woff2)$ {
        add_header Access-Control-Allow-Origin *;
    }
}
